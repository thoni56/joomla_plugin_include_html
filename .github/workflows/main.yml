name: Zip src directory on push to main

on:
  push:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ZIP_BASENAME : plg_content_includehtml
      TAG_NAME : ${{ github.ref_name }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Zip src directory
      run: |
        cd src
        zip -r ../${ZIP_BASENAME}-${TAG_NAME}.zip .

    - name: Upload ZIP as artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ZIP_BASENAME }}-${{ env.TAG_NAME }}.zip
        path: ${{ env.ZIP_BASENAME }}-${{ env.TAG_NAME }}.zip

    - name: Install GitHub CLI
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh -y

    - name: Publish Release
      uses: elgohr/Github-Release-Action@v5
      env:
        GH_TOKEN: ${{ github.token }}
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        title: MyReleaseMessage

    - name: Authenticate with GitHub CLI
      run: gh auth login --with-token < <(echo ${{ secrets.RELEASE_TOKEN }})

    - name: Create Release and Upload Asset
      run: |
        gh release create $TAG_NAME ${ZIP_BASENAME}-${TAG_NAME}.zip --title "Release $TAG_NAME" --notes "Release notes for $TAG_NAME"
